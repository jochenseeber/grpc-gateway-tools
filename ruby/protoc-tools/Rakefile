# frozen_string_literal: true

require "archive/zip"
require "bundler/gem_helper"
require "digest"
require "fileutils"
require "open-uri"
require "os"
require "rake/clean"
require "rake/testtask"
require "tempfile"

import "../rakelib/file_tools.rake"

CLEAN.include("build")
CLOBBER.include("bundled", "generated", "pkg")

Bundler::GemHelper.install_tasks

PROTOC_VERSION = Bundler::GemHelper.gemspec.version.to_s[%r{^\d(?:\.\d+)+}]

BASE_URL = URI("https://github.com/protocolbuffers/protobuf/releases/download/v#{PROTOC_VERSION}/")

CLEAN.include("build")
CLOBBER.include("bundled", "cmd/bundled", "generated", "pkg")

desc "Download plugin binaries"
task "download" do
  # Download protoc license
  FileTools.download(
    source: "https://raw.githubusercontent.com/protocolbuffers/protobuf/v#{PROTOC_VERSION}/LICENSE",
    target: "LICENSE-protoc.txt"
  )

  # Download protoc Linux binaries and proto files
  FileTools.download_zip_archive(source: URI.join(BASE_URL, "protoc-#{PROTOC_VERSION}-linux-x86_64.zip")) do |entry|
    if entry.zip_path == "bin/protoc"
      "cmd/bundled/protoc-linux-x86_64"
    elsif File.fnmatch?("include/**/*.proto", entry.zip_path)
      "bundled/proto/#{entry.zip_path.delete_prefix("include/")}"
    end
  end

  # Download protoc MacOS binaries
  FileTools.download_zip_archive(source: URI.join(BASE_URL, "protoc-#{PROTOC_VERSION}-osx-x86_64.zip")) do |entry|
    "cmd/bundled/protoc-darwin-x86_64" if entry.zip_path == "bin/protoc"
  end

  # Download protoc Windows binaries
  FileTools.download_zip_archive(source: URI.join(BASE_URL, "protoc-#{PROTOC_VERSION}-win64.zip")) do |entry|
    "cmd/bundled/protoc-windows-x86_64.exe" if entry.zip_path == "bin/protoc.exe"
  end
end

file "LICENSE.txt" => "../../LICENSE.txt" do |file|
  FileUtils.cp(file.prerequisites.first, file.name)
end

task "build" => %w[download LICENSE.txt]

Rake::TestTask.new("test" => "download") do |t|
  t.libs = %w[lib test]
  t.test_files = Dir["test/**/*_test.rb"]
end
